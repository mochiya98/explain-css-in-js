{"astroturf":{"size":5345,"files":[{"type":"dist","id":"02bc0be5a0fe27ffaa42b077b55a190b","name":"node_modules/css-loader/dist/runtime/api.js","rawName":"node_modules/css-loader/dist/runtime/api.js","source":"\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","raw":""},{"type":"dist","id":"bc20d9ddc1252a31523c1c5c2a412d05","name":"node_modules/react-dom/index.js","rawName":"node_modules/react-dom/index.js","source":"'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","raw":""},{"type":"dist","id":"c67676495343f3844c05ef589bea0585","name":"node_modules/react/index.js","rawName":"node_modules/react/index.js","source":"'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","raw":""},{"type":"dist","id":"dc0f2660bfda8a3559dd33128c42e6b9","name":"node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","rawName":"node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","source":"//省略(詳細は実ファイルを確認してください)\nexport { ... };","raw":""},{"type":"dist","id":"191bf67b14257a6b52b499ef06107d09","name":"src/index-styles.css","rawName":"examples-src/astroturf/src/index-styles.css","source":"var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/astroturf/css-loader.js!./index-styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","raw":""},{"type":"dist","id":"5ee366e5e5460108a12c40687e3a975b","name":"src/index-styles.css","rawName":"node_modules/astroturf/css-loader.js!./examples-src/astroturf/src/index-styles.css","source":"// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\\n  .Wh-hjU2hXceddi2FkoAbZ {\\n    font-size: 2em;\\n    color: #f90;\\n  }\\n  .MLdNmH36qeySrxJs5Ausa {\\n    font-size: 1.5em;\\n    color: #09f;\\n  }\\n  ._2cgDXlw0d5kKwlZYsY7KxP {\\n    font-size: 1.2em;\\n    color: #f09;\\n  }\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"S1\": \"Wh-hjU2hXceddi2FkoAbZ\",\n\t\"S2\": \"MLdNmH36qeySrxJs5Ausa\",\n\t\"S3\": \"_2cgDXlw0d5kKwlZYsY7KxP\"\n};\nmodule.exports = exports;\n","raw":""},{"type":"dist","id":"e5bf3c9f97c43cb30bd9942c4d8ac4e5","name":"src/index.js","rawName":"examples-src/astroturf/src/index.js","source":"import React from \"react\";\nimport { render } from \"react-dom\";\n\nconst styles = require('./index-styles.css');\n\nconst App = () => React.createElement(\"div\", null, React.createElement(\"h1\", {\n  className: styles.S1\n}, \"Hello\"), React.createElement(\"h2\", {\n  className: styles.S2\n}, \"Hello\"));\n\nrender(React.createElement(App, null), document.body.appendChild(document.createElement(\"div\")));","raw":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { css } from \"astroturf\";\nconst styles = css`\n  .S1 {\n    font-size: 2em;\n    color: #f90;\n  }\n  .S2 {\n    font-size: 1.5em;\n    color: #09f;\n  }\n  .S3 {\n    font-size: 1.2em;\n    color: #f09;\n  }\n`;\n\nconst App = () => (\n  <div>\n    <h1 className={styles.S1}>Hello</h1>\n    <h2 className={styles.S2}>Hello</h2>\n  </div>\n);\n\nrender(<App />, document.body.appendChild(document.createElement(\"div\")));\n"},{"type":"src","id":"e57affae34114beae9075b266f5991be","name":"webpack.config.js","rawName":"webpack.config.js","source":"","raw":"module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              presets: [\"@babel/preset-react\"],\n            },\n          },\n          //↓追加\n          \"astroturf/loader\",\n        ],\n      },\n      {\n        test: /\\.css$/,\n        use: [\n          \"style-loader\",\n          //↓追加\n          \"astroturf/css-loader\",\n        ],\n      },\n    ],\n  },\n};\n"}]},"astroturf-styled":{"size":10134,"files":[{"type":"dist","id":"b43313e2415a327666f9f60c4793ac5e","name":"node_modules/astroturf/index.js","rawName":"node_modules/astroturf/index.js","source":"\"use strict\";\n\nmodule.exports = require('./runtime/styled'); // eslint-disable-line","raw":""},{"type":"dist","id":"6c7c83fef171f33d08651e007d35cef5","name":"node_modules/css-loader/dist/runtime/api.js","rawName":"node_modules/css-loader/dist/runtime/api.js","source":"\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","raw":""},{"type":"dist","id":"f8cd121bce3dfdf22167fb35016371b4","name":"node_modules/react-dom/index.js","rawName":"node_modules/react-dom/index.js","source":"'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","raw":""},{"type":"dist","id":"4e3b4f9f0cb19a23ffa3e12e2ed17971","name":"node_modules/react/index.js","rawName":"node_modules/react/index.js","source":"'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","raw":""},{"type":"dist","id":"80299dcad25f854e7de711765f009e4c","name":"node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","rawName":"node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","source":"//省略(詳細は実ファイルを確認してください)\nexport { ... };","raw":""},{"type":"dist","id":"8ce2447ad04792c0c0ebdfc6bf461b49","name":"src/index-S1.css","rawName":"examples-src/astroturf-styled/src/index-S1.css","source":"var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/astroturf/css-loader.js!./index-S1.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","raw":""},{"type":"dist","id":"9bf8bf5dc87c8b2839e0753a9c802c05","name":"src/index-S1.css","rawName":"node_modules/astroturf/css-loader.js!./examples-src/astroturf-styled/src/index-S1.css","source":"// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"._2HhzCvqFLES0f1dJGNxKDc { /*!*/ }\\n._3SAWQ57cCZeh1QSi3QYguj {\\n\\nfont-size: 2em;\\ncolor: #f90;\\n}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"cls1\": \"_2HhzCvqFLES0f1dJGNxKDc\",\n\t\"cls2\": \"_3SAWQ57cCZeh1QSi3QYguj _2HhzCvqFLES0f1dJGNxKDc\"\n};\nmodule.exports = exports;\n","raw":""},{"type":"dist","id":"c60fd33f52b90257db790106f21f449d","name":"src/index-S2.css","rawName":"examples-src/astroturf-styled/src/index-S2.css","source":"var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/astroturf/css-loader.js!./index-S2.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","raw":""},{"type":"dist","id":"154644e26613aabf2baa8a0805758eae","name":"src/index-S2.css","rawName":"node_modules/astroturf/css-loader.js!./examples-src/astroturf-styled/src/index-S2.css","source":"// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".hKY2PIny0dvn_pNS7xNZF { /*!*/ }\\n._7c79wK1Yc0XZvJvDIX8Rs {\\n\\nfont-size: 1.5em;\\ncolor: #09f;\\n}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"cls1\": \"hKY2PIny0dvn_pNS7xNZF\",\n\t\"cls2\": \"_7c79wK1Yc0XZvJvDIX8Rs hKY2PIny0dvn_pNS7xNZF\"\n};\nmodule.exports = exports;\n","raw":""},{"type":"dist","id":"8b26da2a99f60fea1b083613300f3dbd","name":"src/index-S3.css","rawName":"examples-src/astroturf-styled/src/index-S3.css","source":"var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/astroturf/css-loader.js!./index-S3.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","raw":""},{"type":"dist","id":"c07d14a00b6a80b70de1a33e1f32ff94","name":"src/index-S3.css","rawName":"node_modules/astroturf/css-loader.js!./examples-src/astroturf-styled/src/index-S3.css","source":"// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"._2rABbV-y9zWxXzVf3jvFaR { /*!*/ }\\n._3x7rDDpXupVByrPljQHAQO {\\n\\nfont-size: 1.2em;\\ncolor: #f09;\\n}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"cls1\": \"_2rABbV-y9zWxXzVf3jvFaR\",\n\t\"cls2\": \"_3x7rDDpXupVByrPljQHAQO _2rABbV-y9zWxXzVf3jvFaR\"\n};\nmodule.exports = exports;\n","raw":""},{"type":"dist","id":"d054ad00c836ef07700ee5954de41c9d","name":"src/index.js","rawName":"examples-src/astroturf-styled/src/index.js","source":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport styled from \"astroturf\";\nconst S1 =\n/*#__PURE__*/\nstyled(\"h1\", null, {\n  displayName: \"S1\",\n  styles: require(\"./index-S1.css\"),\n  attrs: null,\n  vars: []\n});\nconst S2 =\n/*#__PURE__*/\nstyled(\"h2\", null, {\n  displayName: \"S2\",\n  styles: require(\"./index-S2.css\"),\n  attrs: null,\n  vars: []\n});\nconst S3 =\n/*#__PURE__*/\nstyled(\"h3\", null, {\n  displayName: \"S3\",\n  styles: require(\"./index-S3.css\"),\n  attrs: null,\n  vars: []\n});\n\nconst App = () => React.createElement(\"div\", null, React.createElement(S1, null, \"Hello\"), React.createElement(S2, null, \"Hello\"));\n\nrender(React.createElement(App, null), document.body.appendChild(document.createElement(\"div\")));","raw":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport styled from \"astroturf\";\nconst S1 = styled.h1`\n  font-size: 2em;\n  color: #f90;\n`;\nconst S2 = styled.h2`\n  font-size: 1.5em;\n  color: #09f;\n`;\nconst S3 = styled.h3`\n  font-size: 1.2em;\n  color: #f09;\n`;\n\nconst App = () => (\n  <div>\n    <S1>Hello</S1>\n    <S2>Hello</S2>\n  </div>\n);\n\nrender(<App />, document.body.appendChild(document.createElement(\"div\")));\n"},{"type":"src","id":"65adba986151dad1eb63a46f813de821","name":"webpack.config.js","rawName":"webpack.config.js","source":"","raw":"module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              presets: [\"@babel/preset-react\"],\n            },\n          },\n          //↓追加\n          \"astroturf/loader\",\n        ],\n      },\n      {\n        test: /\\.css$/,\n        use: [\n          \"style-loader\",\n          //↓追加\n          \"astroturf/css-loader\",\n        ],\n      },\n    ],\n  },\n};\n"}]},"css-modules":{"size":5315,"files":[{"type":"dist","id":"3a8bebbc5bd4356ec46796adb37a50e6","name":"node_modules/css-loader/dist/runtime/api.js","rawName":"node_modules/css-loader/dist/runtime/api.js","source":"\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","raw":""},{"type":"dist","id":"f48c1430f00a73c4d94939f806769cd9","name":"node_modules/react-dom/index.js","rawName":"node_modules/react-dom/index.js","source":"'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","raw":""},{"type":"dist","id":"c2497c7b3f7e70346ec9340ea0d08162","name":"node_modules/react/index.js","rawName":"node_modules/react/index.js","source":"'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","raw":""},{"type":"dist","id":"2459ee63378a8a661b7081807f8dba16","name":"node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","rawName":"node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","source":"//省略(詳細は実ファイルを確認してください)\nexport { ... };","raw":""},{"type":"dist","id":"8ea41e13bf53153d198c5defbae72e4c","name":"src/index.css","rawName":"examples-src/css-modules/src/index.css","source":"var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-1!./index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","raw":".S1 {\n  font-size: 2em;\n  color: #f90;\n}\n.S2 {\n  font-size: 1.5em;\n  color: #09f;\n}\n.S3 {\n  font-size: 1.2em;\n  color: #f09;\n}"},{"type":"dist","id":"a115a50f83cfb9f8bcc56abc1e45e68b","name":"src/index.css","rawName":"node_modules/css-loader/dist/cjs.js??ref--5-1!./examples-src/css-modules/src/index.css","source":"// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"._2PnHMfQDiwUA9dhXy_dS8x {\\n  font-size: 2em;\\n  color: #f90;\\n}\\n._3nzp61dVBRg0hOSTv_5YEl {\\n  font-size: 1.5em;\\n  color: #09f;\\n}\\n.JFZ5FmwJQzqQuVe75i0dT {\\n  font-size: 1.2em;\\n  color: #f09;\\n}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"S1\": \"_2PnHMfQDiwUA9dhXy_dS8x\",\n\t\"S2\": \"_3nzp61dVBRg0hOSTv_5YEl\",\n\t\"S3\": \"JFZ5FmwJQzqQuVe75i0dT\"\n};\nmodule.exports = exports;\n","raw":".S1 {\n  font-size: 2em;\n  color: #f90;\n}\n.S2 {\n  font-size: 1.5em;\n  color: #09f;\n}\n.S3 {\n  font-size: 1.2em;\n  color: #f09;\n}"},{"type":"dist","id":"4e96361185cd4c3fa3b700e440733637","name":"src/index.js","rawName":"examples-src/css-modules/src/index.js","source":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { S1, S2, S3 } from \"./index.css\";\n\nconst App = () => React.createElement(\"div\", null, React.createElement(\"h1\", {\n  className: S1\n}, \"Hello\"), React.createElement(\"h2\", {\n  className: S2\n}, \"Hello\"));\n\nrender(React.createElement(App, null), document.body.appendChild(document.createElement(\"div\")));","raw":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { S1, S2, S3 } from \"./index.css\";\n\nconst App = () => (\n  <div>\n    <h1 className={S1}>Hello</h1>\n    <h2 className={S2}>Hello</h2>\n  </div>\n);\n\nrender(<App />, document.body.appendChild(document.createElement(\"div\")));\n"},{"type":"src","id":"21e3efd10a2ae3c53f2943ed3af59d7f","name":"webpack.config.js","rawName":"webpack.config.js","source":"","raw":"module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              presets: [\"@babel/preset-react\"],\n            },\n          },\n        ],\n      },\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: \"style-loader\",\n            options: {},\n          },\n          {\n            loader: \"css-loader\",\n            options: {\n              //↓追加\n              modules: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n"}]},"emotion":{"size":17148,"files":[{"type":"dist","id":"c767a67f0f6c8885776cd97c31e9c670","name":"node_modules/@emotion/core/dist/core.browser.esm.js","rawName":"node_modules/@emotion/core/dist/core.browser.esm.js","source":"//省略(詳細は実ファイルを確認してください)\nexport { ... };","raw":""},{"type":"dist","id":"97e5f668636ac2f4fc29804b8c3158ee","name":"node_modules/react-dom/index.js","rawName":"node_modules/react-dom/index.js","source":"'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","raw":""},{"type":"dist","id":"18745fdc9b7f2bd87f07b3a500f92c31","name":"node_modules/react/index.js","rawName":"node_modules/react/index.js","source":"'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","raw":""},{"type":"dist","id":"4cfa73c5c3fdc089f03c25dcb9ae894f","name":"src/index.js","rawName":"examples-src/emotion/src/index.js","source":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { css } from \"@emotion/core\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst S1 = {\n  name: \"d9wvkz\",\n  styles: \"font-size:2em;color:#f90;\"\n};\nconst S2 = {\n  name: \"slao21\",\n  styles: \"font-size:1.5em;color:#09f;\"\n};\nconst S3 = {\n  name: \"199r1fx\",\n  styles: \"font-size:1.2em;color:#f09;\"\n};\n\nconst App = () => ___EmotionJSX(\"div\", null, ___EmotionJSX(\"h1\", {\n  css: S1\n}, \"Hello\"), ___EmotionJSX(\"h2\", {\n  css: S2\n}, \"Hello\"));\n\nrender(___EmotionJSX(App, null), document.body.appendChild(document.createElement(\"div\")));","raw":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { css } from \"@emotion/core\";\n\nconst S1 = css`\n  font-size: 2em;\n  color: #f90;\n`;\nconst S2 = css`\n  font-size: 1.5em;\n  color: #09f;\n`;\nconst S3 = css`\n  font-size: 1.2em;\n  color: #f09;\n`;\n\nconst App = () => (\n  <div>\n    <h1 css={S1}>Hello</h1>\n    <h2 css={S2}>Hello</h2>\n  </div>\n);\n\nrender(<App />, document.body.appendChild(document.createElement(\"div\")));\n"},{"type":"src","id":"f8c73f331581dcabee144dee14e47a90","name":"webpack.config.js","rawName":"webpack.config.js","source":"","raw":"module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              presets: [\n                \"@babel/preset-react\",\n                //↓追加\n                [\n                  \"@emotion/babel-preset-css-prop\",\n                  {\n                    autoLabel: false,\n                    sourceMap: false,\n                  },\n                ],\n              ],\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n"}]},"emotion-styled":{"size":23858,"files":[{"type":"dist","id":"b872db59966a3a45d17c5a299b208421","name":"node_modules/@emotion/styled/dist/styled.browser.esm.js","rawName":"node_modules/@emotion/styled/dist/styled.browser.esm.js","source":"import styled from '@emotion/styled-base';\n\nvar tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n\nvar newStyled = styled.bind();\ntags.forEach(function (tagName) {\n  newStyled[tagName] = newStyled(tagName);\n});\n\nexport default newStyled;\n","raw":""},{"type":"dist","id":"daef1bb3d0eb413d8c8f127f4b077c66","name":"node_modules/react-dom/index.js","rawName":"node_modules/react-dom/index.js","source":"'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","raw":""},{"type":"dist","id":"589ee921b209cb4fd1fe3340a7fc13af","name":"node_modules/react/index.js","rawName":"node_modules/react/index.js","source":"'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","raw":""},{"type":"dist","id":"cbfd5cdc289d85a0216c8737f9cd1c75","name":"src/index.js","rawName":"examples-src/emotion-styled/src/index.js","source":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport styled from \"@emotion/styled\";\nconst S1 = styled.h1`\n  font-size: 2em;\n  color: #f90;\n`;\nconst S2 = styled.h2`\n  font-size: 1.5em;\n  color: #09f;\n`;\nconst S3 = styled.h3`\n  font-size: 1.2em;\n  color: #f09;\n`;\n\nconst App = () => React.createElement(\"div\", null, React.createElement(S1, null, \"Hello\"), React.createElement(S2, null, \"Hello\"));\n\nrender(React.createElement(App, null), document.body.appendChild(document.createElement(\"div\")));","raw":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport styled from \"@emotion/styled\";\nconst S1 = styled.h1`\n  font-size: 2em;\n  color: #f90;\n`;\nconst S2 = styled.h2`\n  font-size: 1.5em;\n  color: #09f;\n`;\nconst S3 = styled.h3`\n  font-size: 1.2em;\n  color: #f09;\n`;\n\nconst App = () => (\n  <div>\n    <S1>Hello</S1>\n    <S2>Hello</S2>\n  </div>\n);\n\nrender(<App />, document.body.appendChild(document.createElement(\"div\")));\n"},{"type":"src","id":"31a5a2979fc9961b0977bdf3305d4121","name":"webpack.config.js","rawName":"webpack.config.js","source":"","raw":"module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              presets: [\"@babel/preset-react\"],\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n"}]},"emotion-styled-with-ext-plugin":{"size":22901,"files":[{"type":"dist","id":"58f9482f57f65c15bd316257e7caab0f","name":"node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js","rawName":"node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js","source":"//省略(詳細は実ファイルを確認してください)\nexport { ... };","raw":""},{"type":"dist","id":"4133b2c03b68502018ae474a022a4693","name":"node_modules/react-dom/index.js","rawName":"node_modules/react-dom/index.js","source":"'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","raw":""},{"type":"dist","id":"1f8aef5bf96bc726703b2e5edd67212a","name":"node_modules/react/index.js","rawName":"node_modules/react/index.js","source":"'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","raw":""},{"type":"dist","id":"86455345d80f076b0daadcc0c818aa5d","name":"src/index.js","rawName":"examples-src/emotion-styled-with-ext-plugin/src/index.js","source":"import _styled from \"@emotion/styled-base\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\n\nconst S1 = _styled(\"h1\", {\n  target: \"eot2kjd0\"\n})({\n  name: \"d9wvkz\",\n  styles: \"font-size:2em;color:#f90;\"\n});\n\nconst S2 = _styled(\"h2\", {\n  target: \"eot2kjd1\"\n})({\n  name: \"slao21\",\n  styles: \"font-size:1.5em;color:#09f;\"\n});\n\nconst S3 = _styled(\"h3\", {\n  target: \"eot2kjd2\"\n})({\n  name: \"199r1fx\",\n  styles: \"font-size:1.2em;color:#f09;\"\n});\n\nconst App = () => React.createElement(\"div\", null, React.createElement(S1, null, \"Hello\"), React.createElement(S2, null, \"Hello\"));\n\nrender(React.createElement(App, null), document.body.appendChild(document.createElement(\"div\")));","raw":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport styled from \"@emotion/styled\";\n\nconst S1 = styled.h1`\n  font-size: 2em;\n  color: #f90;\n`;\nconst S2 = styled.h2`\n  font-size: 1.5em;\n  color: #09f;\n`;\nconst S3 = styled.h3`\n  font-size: 1.2em;\n  color: #f09;\n`;\n\nconst App = () => (\n  <div>\n    <S1>Hello</S1>\n    <S2>Hello</S2>\n  </div>\n);\n\nrender(<App />, document.body.appendChild(document.createElement(\"div\")));\n"},{"type":"src","id":"289f55775c107502907cf9f699762cab","name":"webpack.config.js","rawName":"webpack.config.js","source":"","raw":"module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              presets: [\"@babel/preset-react\"],\n              //↓追加\n              plugins: [\n                [\n                  \"babel-plugin-emotion\",\n                  {\n                    autoLabel: false,\n                    sourceMap: false,\n                  },\n                ],\n              ],\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n"}]},"emotion-with-ext-plugin":{"size":17148,"files":[{"type":"dist","id":"385dfaa167c122ed7207084d2f38cf33","name":"node_modules/@emotion/core/dist/core.browser.esm.js","rawName":"node_modules/@emotion/core/dist/core.browser.esm.js","source":"//省略(詳細は実ファイルを確認してください)\nexport { ... };","raw":""},{"type":"dist","id":"e791971ec63a191aaedfcf8218a790e5","name":"node_modules/react-dom/index.js","rawName":"node_modules/react-dom/index.js","source":"'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","raw":""},{"type":"dist","id":"24042e46726cedc97cd844c6d49ba937","name":"node_modules/react/index.js","rawName":"node_modules/react/index.js","source":"'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","raw":""},{"type":"dist","id":"74bc39bbc4e6d3e9e40777f2f2e51641","name":"src/index.js","rawName":"examples-src/emotion-with-ext-plugin/src/index.js","source":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { css } from \"@emotion/core\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst S1 =\n/*#__PURE__*/\n{\n  name: \"d9wvkz\",\n  styles: \"font-size:2em;color:#f90;\"\n};\nconst S2 =\n/*#__PURE__*/\n{\n  name: \"slao21\",\n  styles: \"font-size:1.5em;color:#09f;\"\n};\nconst S3 =\n/*#__PURE__*/\n{\n  name: \"199r1fx\",\n  styles: \"font-size:1.2em;color:#f09;\"\n};\n\nconst App = () => ___EmotionJSX(\"div\", null, ___EmotionJSX(\"h1\", {\n  css: S1\n}, \"Hello\"), ___EmotionJSX(\"h2\", {\n  css: S2\n}, \"Hello\"));\n\nrender(___EmotionJSX(App, null), document.body.appendChild(document.createElement(\"div\")));","raw":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { css } from \"@emotion/core\";\n\nconst S1 = css`\n  font-size: 2em;\n  color: #f90;\n`;\nconst S2 = css`\n  font-size: 1.5em;\n  color: #09f;\n`;\nconst S3 = css`\n  font-size: 1.2em;\n  color: #f09;\n`;\n\nconst App = () => (\n  <div>\n    <h1 css={S1}>Hello</h1>\n    <h2 css={S2}>Hello</h2>\n  </div>\n);\n\nrender(<App />, document.body.appendChild(document.createElement(\"div\")));\n"},{"type":"src","id":"9a4d6bda7c099a324b246290af805242","name":"webpack.config.js","rawName":"webpack.config.js","source":"","raw":"module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              presets: [\n                \"@babel/preset-react\",\n                //↓追加\n                [\n                  \"@emotion/babel-preset-css-prop\",\n                  {\n                    autoLabel: false,\n                    sourceMap: false,\n                  },\n                ],\n              ],\n              //↓追加\n              plugins: [\n                [\n                  \"babel-plugin-emotion\",\n                  {\n                    autoLabel: false,\n                    sourceMap: false,\n                  },\n                ],\n              ],\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n"}]},"linaria":{"size":5105,"files":[{"type":"dist","id":"3b693f84e8232e48e03d387c872ca8b3","name":"node_modules/css-loader/dist/runtime/api.js","rawName":"node_modules/css-loader/dist/runtime/api.js","source":"\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","raw":""},{"type":"dist","id":"8a99f6832d85d5dfc7b0438b68618efd","name":"node_modules/react-dom/index.js","rawName":"node_modules/react-dom/index.js","source":"'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","raw":""},{"type":"dist","id":"dfabbb12b640e3a4bf37f96a2dfad94b","name":"node_modules/react/index.js","rawName":"node_modules/react/index.js","source":"'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","raw":""},{"type":"dist","id":"72add8c59905b2ba0059ac11b62a7094","name":"node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","rawName":"node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","source":"//省略(詳細は実ファイルを確認してください)\nexport { ... };","raw":""},{"type":"dist","id":"00b4934d05e8f260b86cb820ea7ddb48","name":"src/index.js","rawName":"examples-src/linaria/src/index.js","source":"import React from \"react\";\nimport { render } from \"react-dom\";\nconst S1 = \"so4u1qb\";\nconst S2 = \"shq9q5c\";\nconst S3 = \"s1su8feg\";\n\nconst App = () => React.createElement(\"div\", null, React.createElement(\"h1\", {\n  className: S1\n}, \"Hello\"), React.createElement(\"h2\", {\n  className: S2\n}, \"Hello\"));\n\nrender(React.createElement(App, null), document.body.appendChild(document.createElement(\"div\")));\n\nrequire(\"/mnt/x/explain-css-in-js/.linaria-cache/examples-src/linaria/src/index.linaria.css\");","raw":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { css } from \"linaria\";\nconst S1 = css`\n  font-size: 2em;\n  color: #f90;\n`;\nconst S2 = css`\n  font-size: 1.5em;\n  color: #09f;\n`;\nconst S3 = css`\n  font-size: 1.2em;\n  color: #f09;\n`;\n\nconst App = () => (\n  <div>\n    <h1 className={S1}>Hello</h1>\n    <h2 className={S2}>Hello</h2>\n  </div>\n);\n\nrender(<App />, document.body.appendChild(document.createElement(\"div\")));\n"},{"type":"dist","id":"badca93e0a80bb5c41670f83eae2d8c0","name":"src/index.linaria.css","rawName":".linaria-cache/examples-src/linaria/src/index.linaria.css","source":"var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!./index.linaria.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","raw":".so4u1qb{font-size:2em;color:#f90;}\n.shq9q5c{font-size:1.5em;color:#09f;}\n"},{"type":"dist","id":"9c7fd583765cc02e9609a115b9589361","name":"src/index.linaria.css","rawName":"node_modules/css-loader/dist/cjs.js!./.linaria-cache/examples-src/linaria/src/index.linaria.css","source":"// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".so4u1qb{font-size:2em;color:#f90;}\\n.shq9q5c{font-size:1.5em;color:#09f;}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","raw":".so4u1qb{font-size:2em;color:#f90;}\n.shq9q5c{font-size:1.5em;color:#09f;}\n"},{"type":"src","id":"64ca2df8ede51b0d4d21e3932bdfdc9a","name":"webpack.config.js","rawName":"webpack.config.js","source":"","raw":"module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              presets: [\n                \"@babel/preset-react\",\n                //↓追加\n                \"linaria/babel\",\n              ],\n              //note:\n              // 不必要になったimport消してくれない不具合がある(#293)ので、\n              // babelプラグインでimportを除去する\n              //↓追加\n              plugins: [\n                [\n                  \"filter-imports\",\n                  {\n                    imports: {\n                      linaria: [\"css\"],\n                    },\n                  },\n                ],\n              ],\n            },\n          },\n          //↓追加\n          {\n            //note:\n            // 自動参照のbabelrc系にjsxプラグイン書いてないと\n            // linaria-loaderがjsxのparseErrorで落ちます\n            // …意図しないバグの匂いがする。\n            loader: \"linaria/loader\",\n            options: {\n              sourceMap: false,\n            },\n          },\n        ],\n      },\n      {\n        test: /\\.css$/,\n        use: [\"style-loader\", \"css-loader\"],\n      },\n    ],\n  },\n};\n"}]},"linaria-styled":{"size":21235,"files":[{"type":"dist","id":"7c786eb67fb6c539c00565e1271e2264","name":"node_modules/css-loader/dist/runtime/api.js","rawName":"node_modules/css-loader/dist/runtime/api.js","source":"\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","raw":""},{"type":"dist","id":"bdc9c493131d4a74ddc27be529a98bf9","name":"node_modules/linaria/react.js","rawName":"node_modules/linaria/react.js","source":"/* eslint-disable import/no-unresolved */\n\nmodule.exports = require('./lib/react');\n","raw":""},{"type":"dist","id":"3df52a7c977b01c8a3a6001c4b36009a","name":"node_modules/react-dom/index.js","rawName":"node_modules/react-dom/index.js","source":"'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","raw":""},{"type":"dist","id":"f3a8c887c47a69a73d498ef3d67d7a87","name":"node_modules/react/index.js","rawName":"node_modules/react/index.js","source":"'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","raw":""},{"type":"dist","id":"8d666dc05633a81a9b0d8dca5a623d25","name":"node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","rawName":"node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","source":"//省略(詳細は実ファイルを確認してください)\nexport { ... };","raw":""},{"type":"dist","id":"388e116123a0a4003b376080f179b276","name":"src/index.js","rawName":"examples-src/linaria-styled/src/index.js","source":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { styled } from \"linaria/react\";\nconst S1 =\n/*#__PURE__*/\nstyled(\"h1\")({\n  name: \"S1\",\n  class: \"spvnziq\"\n});\nconst S2 =\n/*#__PURE__*/\nstyled(\"h2\")({\n  name: \"S2\",\n  class: \"s1v2fafw\"\n});\nconst S3 =\n/*#__PURE__*/\nstyled(\"h3\")({\n  name: \"S3\",\n  class: \"s1am7w54\"\n});\n\nconst App = () => React.createElement(\"div\", null, React.createElement(S1, null, \"Hello\"), React.createElement(S2, null, \"Hello\"));\n\nrender(React.createElement(App, null), document.body.appendChild(document.createElement(\"div\")));\n\nrequire(\"/mnt/x/explain-css-in-js/.linaria-cache/examples-src/linaria-styled/src/index.linaria.css\");","raw":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport { styled } from \"linaria/react\";\nconst S1 = styled.h1`\n  font-size: 2em;\n  color: #f90;\n`;\nconst S2 = styled.h2`\n  font-size: 1.5em;\n  color: #09f;\n`;\nconst S3 = styled.h3`\n  font-size: 1.2em;\n  color: #f09;\n`;\n\nconst App = () => (\n  <div>\n    <S1>Hello</S1>\n    <S2>Hello</S2>\n  </div>\n);\n\nrender(<App />, document.body.appendChild(document.createElement(\"div\")));\n"},{"type":"dist","id":"dc384f375bb6f8de14316155570eb1f2","name":"src/index.linaria.css","rawName":".linaria-cache/examples-src/linaria-styled/src/index.linaria.css","source":"var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!./index.linaria.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","raw":".spvnziq{font-size:2em;color:#f90;}\n.s1v2fafw{font-size:1.5em;color:#09f;}\n"},{"type":"dist","id":"a8d72d84f5ce2bebd25283a26ff69647","name":"src/index.linaria.css","rawName":"node_modules/css-loader/dist/cjs.js!./.linaria-cache/examples-src/linaria-styled/src/index.linaria.css","source":"// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".spvnziq{font-size:2em;color:#f90;}\\n.s1v2fafw{font-size:1.5em;color:#09f;}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","raw":".spvnziq{font-size:2em;color:#f90;}\n.s1v2fafw{font-size:1.5em;color:#09f;}\n"},{"type":"src","id":"8490cbceee0e1c00873b515bd0e8562b","name":"webpack.config.js","rawName":"webpack.config.js","source":"","raw":"module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              presets: [\n                \"@babel/preset-react\",\n                //↓追加\n                \"linaria/babel\",\n              ],\n            },\n          },\n          //↓追加\n          {\n            //note:\n            // 自動参照のbabelrc系にjsxプラグイン書いてないと\n            // linaria-loaderがjsxのparseErrorで落ちます\n            // …意図しないバグの匂いがする。\n            loader: \"linaria/loader\",\n            options: {\n              sourceMap: false,\n            },\n          },\n        ],\n      },\n      {\n        test: /\\.css$/,\n        use: [\"style-loader\", \"css-loader\"],\n      },\n    ],\n  },\n};\n"}]},"styled-components":{"size":34572,"files":[{"type":"dist","id":"2276718a7c425ba6db2126351e88b26c","name":"node_modules/react-dom/index.js","rawName":"node_modules/react-dom/index.js","source":"'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","raw":""},{"type":"dist","id":"8ab6852269920d5a380ead46a5bfc68d","name":"node_modules/react/index.js","rawName":"node_modules/react/index.js","source":"'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","raw":""},{"type":"dist","id":"46be42ca0d4a5db0165c7b241d525dc0","name":"node_modules/styled-components/dist/styled-components.browser.esm.js","rawName":"node_modules/styled-components/dist/styled-components.browser.esm.js","source":"//省略(詳細は実ファイルを確認してください)\nexport { ... };","raw":""},{"type":"dist","id":"5ea9b121da4430a9c45f4e8136021768","name":"src/index.js","rawName":"examples-src/styled-components/src/index.js","source":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport styled from \"styled-components\";\nconst S1 = styled.h1`\n  font-size: 2em;\n  color: #f90;\n`;\nconst S2 = styled.h2`\n  font-size: 1.5em;\n  color: #09f;\n`;\nconst S3 = styled.h3`\n  font-size: 1.2em;\n  color: #f09;\n`;\n\nconst App = () => React.createElement(\"div\", null, React.createElement(S1, null, \"Hello\"), React.createElement(S2, null, \"Hello\"));\n\nrender(React.createElement(App, null), document.body.appendChild(document.createElement(\"div\")));","raw":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport styled from \"styled-components\";\nconst S1 = styled.h1`\n  font-size: 2em;\n  color: #f90;\n`;\nconst S2 = styled.h2`\n  font-size: 1.5em;\n  color: #09f;\n`;\nconst S3 = styled.h3`\n  font-size: 1.2em;\n  color: #f09;\n`;\n\nconst App = () => (\n  <div>\n    <S1>Hello</S1>\n    <S2>Hello</S2>\n  </div>\n);\n\nrender(<App />, document.body.appendChild(document.createElement(\"div\")));\n"},{"type":"src","id":"ecb83080c762c77d30f2f8d01695d571","name":"webpack.config.js","rawName":"webpack.config.js","source":"","raw":"module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              presets: [\"@babel/preset-react\"],\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n"}]},"styled-components-with-babel-plugin":{"size":34734,"files":[{"type":"dist","id":"31a649d6870dba8deb11c36d85bc60c8","name":"node_modules/react-dom/index.js","rawName":"node_modules/react-dom/index.js","source":"'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","raw":""},{"type":"dist","id":"446842e17ccd58c7ead2f87549e96259","name":"node_modules/react/index.js","rawName":"node_modules/react/index.js","source":"'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","raw":""},{"type":"dist","id":"83306cb83a7528b1b6b524047533cc62","name":"node_modules/styled-components/dist/styled-components.browser.esm.js","rawName":"node_modules/styled-components/dist/styled-components.browser.esm.js","source":"//省略(詳細は実ファイルを確認してください)\nexport { ... };","raw":""},{"type":"dist","id":"838820054d6c09562e09977a748bb186","name":"src/index.js","rawName":"examples-src/styled-components-with-babel-plugin/src/index.js","source":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport styled from \"styled-components\";\nconst S1 = styled.h1.withConfig({\n  displayName: \"src__S1\",\n  componentId: \"vb657w-0\"\n})([\"font-size:2em;color:#f90;\"]);\nconst S2 = styled.h2.withConfig({\n  displayName: \"src__S2\",\n  componentId: \"vb657w-1\"\n})([\"font-size:1.5em;color:#09f;\"]);\nconst S3 = styled.h3.withConfig({\n  displayName: \"src__S3\",\n  componentId: \"vb657w-2\"\n})([\"font-size:1.2em;color:#f09;\"]);\n\nconst App = () => React.createElement(\"div\", null, React.createElement(S1, null, \"Hello\"), React.createElement(S2, null, \"Hello\"));\n\nrender(React.createElement(App, null), document.body.appendChild(document.createElement(\"div\")));","raw":"import React from \"react\";\nimport { render } from \"react-dom\";\nimport styled from \"styled-components\";\nconst S1 = styled.h1`\n  font-size: 2em;\n  color: #f90;\n`;\nconst S2 = styled.h2`\n  font-size: 1.5em;\n  color: #09f;\n`;\nconst S3 = styled.h3`\n  font-size: 1.2em;\n  color: #f09;\n`;\n\nconst App = () => (\n  <div>\n    <S1>Hello</S1>\n    <S2>Hello</S2>\n  </div>\n);\n\nrender(<App />, document.body.appendChild(document.createElement(\"div\")));\n"},{"type":"src","id":"f4860a5fd1d2b617b78bb537cd159826","name":"webpack.config.js","rawName":"webpack.config.js","source":"","raw":"module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              presets: [\"@babel/preset-react\"],\n              //↓追加\n              plugins: [\"babel-plugin-styled-components\"],\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n"}]}}